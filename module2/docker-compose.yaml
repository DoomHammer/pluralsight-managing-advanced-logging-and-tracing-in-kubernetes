version: '3.3'
services:
  workoutgateway:
    ports:
      - '8000:8000'
    environment:
      - 'RUN_CONTROLLER_URL=http://runcontroller:8080'
    build: workoutgateway
    depends_on:
      - runcontroller
  runcontroller:
    ports:
      - '9080:8080'
    environment:
      - 'REDIS_HOST=redis'
      - 'REDIS_PASSWORD='
    build: runcontroller
    depends_on:
      redis:
        condition: service_started
      otelcol:
        condition: service_started
  frontend:
    ports:
      - '3000:3000'
    environment:
      - 'RUN_CONTROLLER_URL=http://runcontroller:8080'
      - 'PORT=3000'
    depends_on:
      - workoutgateway
    build:
      context: frontend
      dockerfile: Dockerfile
  redis:
    image: redis:7.2-alpine
  # Frontend Proxy (Envoy)
  frontendproxy:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-frontendproxy
    container_name: frontend-proxy
    build:
      context: ./
      dockerfile: frontendproxy/Dockerfile
    deploy:
      resources:
        limits:
          memory: 50M
    ports:
      - "${ENVOY_PORT}:${ENVOY_PORT}"
      - 10000:10000
    environment:
      - FRONTEND_PORT
      - FRONTEND_HOST
      - WORKOUTGATEWAY_PORT
      - WORKOUTGATEWAY_HOST
      - GRAFANA_SERVICE_PORT
      - GRAFANA_SERVICE_HOST
      - JAEGER_SERVICE_PORT
      - JAEGER_SERVICE_HOST
      - OTEL_COLLECTOR_HOST
      - OTEL_COLLECTOR_PORT_GRPC
      - OTEL_COLLECTOR_PORT_HTTP
      - ENVOY_PORT
